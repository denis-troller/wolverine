name: sonar

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  config: Release
  disable_test_parallelization: true
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions: read-all
    steps:
      - name: Setup .NET 7
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
  
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir .\.sonar\scanner 
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build Version
        run: |
          dotnet tool install --global minver-cli --version 4.2.0
          version=$(minver --tag-prefix v)
          echo "MINVERVERSIONOVERRIDE=$version" >> $GITHUB_ENV
          echo "### Version: $version" >> $GITHUB_STEP_SUMMARY
        
      - name: Build and analyze
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"denis-troller_wolverine" /o:"denis-troller" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          ./build.sh --no-color ci
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
